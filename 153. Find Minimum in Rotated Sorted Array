// 1. if nums[left] < nums[mid] < nums[right], then the minimum is in [left, mid]
// 2. if nums[left] < nums[mid] && nums[mid] > nums[right], then the minimum is in [mid, right]
// 3. if nums[left] > nums[mid] && nums[mid] < nums[right], then the minimum is in [left, mid]
// 4. if nums[left] > nums[mid] > nums[right], well, it won't happe


class Solution {
    public int findMin(int[] nums) {
        // int res = Integer.MAX_VALUE;
        int left = 0, right = nums.length - 1;
        
        while(left + 1 < right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] > nums[left] && nums[mid] > nums[right]){
                left = mid;
            }else {
                right = mid;
            }
        }
        return Math.min(nums[left], nums[right]);
    }
}
