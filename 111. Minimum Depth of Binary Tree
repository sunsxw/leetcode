/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
/*****************dfs******************/
 class Solution {
     public int minDepth(TreeNode root) {
         if(root == null){
             return 0;
         }
        
         return getDepth(root);
     }
    
     public int getDepth(TreeNode root){
         if(root == null){
             return 0;
         }
        
         if(root.left == null){
             return getDepth(root.right) + 1;
         }else if(root.right == null){
             return getDepth(root.left) + 1;
         }
        
         return Math.min(getDepth(root.left), getDepth(root.right)) + 1;
     }
 }


