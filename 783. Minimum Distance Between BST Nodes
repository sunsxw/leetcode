/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 
class Solution {
    
    private Integer diff = Integer.MAX_VALUE;
    private Integer prev = null;
    
    public int minDiffInBST(TreeNode root) {
        if(root == null){
            return 0;
        }
        
        dfs(root);
        return diff;
    }
    
    public void dfs(TreeNode root){
        if(root == null){
            return;
        }
        
        dfs(root.left);
        
        if(prev != null){
            diff = Math.min(diff, root.val - prev);
        }
        prev = root.val;
        
        dfs(root.right);
    }
}
