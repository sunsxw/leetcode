class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> selected = new ArrayList<>();
        backtracking(res, selected, k, n, 1);
        return res;
    }
    
    public void backtracking(List<List<Integer>> res, List<Integer> selected, int k, int n, int index) {
        if(k == 0) {
            res.add(new ArrayList<Integer>(selected));
            return;
        }
        
        for(int i = index; i <= n; i++) {
            if(selected.contains(i)) {
                continue;
            }
            
            selected.add(i);
            backtracking(res, selected, k - 1, n, i + 1);
            selected.remove(selected.size() - 1);
        }
    }
}
