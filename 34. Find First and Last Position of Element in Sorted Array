class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = {-1, -1};
        
        if(nums == null || nums.length == 0){
            return res;
        }
        
        int left = 0, right = nums.length - 1;
        int leftEnd = - 1, rightEnd = -1;
        //find left end
        while(left + 1 < right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] < target){
                left = mid;
            }else {
                right = mid;
            }
        }
        
        if(nums[left] == target) {
            leftEnd = left;
        }else if(nums[right] == target) {
            leftEnd = right;
        }
        if(leftEnd == -1) {
            return res;
        }

        //find right end
        left = 0;
        right = nums.length - 1;
        while(left + 1 < right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] <= target){
                left = mid;
            }else{
                right = mid;
            }
        }
        
        if(nums[right] == target){
            rightEnd = right;
        }else if(nums[left] == target){
            rightEnd = left;
        }
        
        if(rightEnd == -1){
            return res;
        }
        
        //
        res[0] = leftEnd;
        res[1] = rightEnd;
        return res;
    }
}
