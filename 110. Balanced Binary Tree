/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null){
            return true;
        }
        
        return hight(root) != -1;
    }
    
    public int hight(TreeNode root){
        if(root == null){
            return 0;
        }
        
        int leftHight = hight(root.left);
        int rightHight = hight(root.right);
        
        if(leftHight == -1 || rightHight == -1){
            return -1;
        }
        
        if(Math.abs(leftHight - rightHight) > 1){
            return -1;
        }else{
            int max = Math.max(leftHight, rightHight);
            return max + 1;
        }
    }
}
